/* soapBasicHttpBinding_USCOREIWSCenterEntranceProxy.cpp
   Generated by gSOAP 2.8.63 for servicel.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapBasicHttpBinding_USCOREIWSCenterEntranceProxy.h"

BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy() : soap(SOAP_IO_DEFAULT)
{	BasicHttpBinding_USCOREIWSCenterEntranceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy(const BasicHttpBinding_USCOREIWSCenterEntranceProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy(const struct soap &_soap) : soap(_soap)
{ }

BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy(const char *endpoint) : soap(SOAP_IO_DEFAULT)
{	BasicHttpBinding_USCOREIWSCenterEntranceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy(soap_mode iomode) : soap(iomode)
{	BasicHttpBinding_USCOREIWSCenterEntranceProxy_init(iomode, iomode);
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy(const char *endpoint, soap_mode iomode) : soap(iomode)
{	BasicHttpBinding_USCOREIWSCenterEntranceProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	BasicHttpBinding_USCOREIWSCenterEntranceProxy_init(imode, omode);
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy::~BasicHttpBinding_USCOREIWSCenterEntranceProxy()
{
	this->destroy();
	}

void BasicHttpBinding_USCOREIWSCenterEntranceProxy::BasicHttpBinding_USCOREIWSCenterEntranceProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns3", "http://schemas.microsoft.com/2003/10/Serialization/", NULL, NULL},
        {"ns1", "http://tempuri.org/", NULL, NULL},
        {NULL, NULL, NULL, NULL}
//    {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", NULL, NULL},
//    {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", NULL, NULL},
//    {"xsi", "http://www.w3.org/2001/XMLSchema-instance", NULL, NULL},
//    {"xsd", "http://www.w3.org/2001/XMLSchema", NULL, NULL},
//    {"ns3", "http://schemas.microsoft.com/2003/10/Serialization/", NULL, NULL},
//    {"ns1", "http://tempuri.org/", NULL, NULL},
//    {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy *BasicHttpBinding_USCOREIWSCenterEntranceProxy::copy()
{	BasicHttpBinding_USCOREIWSCenterEntranceProxy *dup = SOAP_NEW_UNMANAGED(BasicHttpBinding_USCOREIWSCenterEntranceProxy(*(struct soap*)this));
	return dup;
}

BasicHttpBinding_USCOREIWSCenterEntranceProxy& BasicHttpBinding_USCOREIWSCenterEntranceProxy::operator=(const BasicHttpBinding_USCOREIWSCenterEntranceProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void BasicHttpBinding_USCOREIWSCenterEntranceProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void BasicHttpBinding_USCOREIWSCenterEntranceProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	BasicHttpBinding_USCOREIWSCenterEntranceProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_noheader()
{	this->header = NULL;
}

::SOAP_ENV__Header *BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_fault()
{	return this->fault;
}

const char *BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_close_socket()
{	return soap_closesock(this);
}

int BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *BasicHttpBinding_USCOREIWSCenterEntranceProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int BasicHttpBinding_USCOREIWSCenterEntranceProxy::ENTRANCE(const char *endpoint, const char *soap_action, _ns1__ENTRANCE *ns1__ENTRANCE, _ns1__ENTRANCEResponse &ns1__ENTRANCEResponse)
{	struct soap *soap = this;
	struct __ns1__ENTRANCE soap_tmp___ns1__ENTRANCE;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://srv-tpmweb.joytechcn.local/WSCenter/WSCenterEntrance.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IWSCenterEntrance/ENTRANCE";
	soap_tmp___ns1__ENTRANCE.ns1__ENTRANCE = ns1__ENTRANCE;
	soap_begin(soap);
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ENTRANCE(soap, &soap_tmp___ns1__ENTRANCE);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ENTRANCE(soap, &soap_tmp___ns1__ENTRANCE, "-ns1:ENTRANCE", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ENTRANCE(soap, &soap_tmp___ns1__ENTRANCE, "-ns1:ENTRANCE", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ENTRANCEResponse*>(&ns1__ENTRANCEResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ENTRANCEResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ENTRANCEResponse.soap_get(soap, "ns1:ENTRANCEResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIWSCenterEntranceProxy::ENTRANCE_USCORETEST(const char *endpoint, const char *soap_action, _ns1__ENTRANCE_USCORETEST *ns1__ENTRANCE_USCORETEST, _ns1__ENTRANCE_USCORETESTResponse &ns1__ENTRANCE_USCORETESTResponse)
{	struct soap *soap = this;
	struct __ns1__ENTRANCE_USCORETEST soap_tmp___ns1__ENTRANCE_USCORETEST;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://srv-tpmweb.joytechcn.local/WSCenter/WSCenterEntrance.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IWSCenterEntrance/ENTRANCE_TEST";
	soap_tmp___ns1__ENTRANCE_USCORETEST.ns1__ENTRANCE_USCORETEST = ns1__ENTRANCE_USCORETEST;
	soap_begin(soap);
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ENTRANCE_USCORETEST(soap, &soap_tmp___ns1__ENTRANCE_USCORETEST);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ENTRANCE_USCORETEST(soap, &soap_tmp___ns1__ENTRANCE_USCORETEST, "-ns1:ENTRANCE_TEST", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ENTRANCE_USCORETEST(soap, &soap_tmp___ns1__ENTRANCE_USCORETEST, "-ns1:ENTRANCE_TEST", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ENTRANCE_USCORETESTResponse*>(&ns1__ENTRANCE_USCORETESTResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ENTRANCE_USCORETESTResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ENTRANCE_USCORETESTResponse.soap_get(soap, "ns1:ENTRANCE_TESTResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
